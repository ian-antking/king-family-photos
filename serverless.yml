service: king-family-photos
variablesResolutionMode: 20210326

frameworkVersion: "2"

custom:
  appName: king-family-photos-${opt:stage, 'dev'}

package:
  individually: true
  patterns:
    - '!./**'
    - ./bin/**

provider:
  name: "aws"
  runtime: go1.x
  lambdaHashingVersion: 20201221
  region: eu-west-2
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - s3:PutObject
            - S3:DeleteObject
          Resource: arn:aws:s3:::${self:custom.appName}-display/*
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource: arn:aws:s3:::${self:custom.appName}-ingest/*


resources:
  Resources:
    PhotoDisplayBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.appName}-display
        AccessControl: Private

    PhotoBucketSyncPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - S3:PutObject
                - S3:GetObject
              Resource: !Join [ "/", [ !GetAtt PhotoDisplayBucket.Arn, "*" ]]
            - Effect: Allow
              Action:
                - S3:ListBucket
              Resource: !GetAtt PhotoDisplayBucket.Arn

functions:
  resizePhoto:
    name: ${self:custom.appName}-resize-photo
    handler: bin/resizePhoto
    events:
      - s3:
          bucket: ${self:custom.appName}-ingest
          event: s3:ObjectCreated:*
    environment:
      DISPLAY_BUCKET: ${self:custom.appName}-display

  removePhoto:
    name: ${self:custom.appName}-remove-photo
    handler: bin/removePhoto
    events:
      - s3:
          bucket: ${self:custom.appName}-ingest
          event: s3:ObjectRemoved:*
    environment:
      DISPLAY_BUCKET: ${self:custom.appName}-display