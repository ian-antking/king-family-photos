service: king-family-photos
variablesResolutionMode: 20210326

frameworkVersion: "2"

custom:
  appName: king-family-photos-${opt:stage, 'dev'}

package:
  individually: true
  patterns:
    - '!./**'
    - ./bin/**

provider:
  name: "aws"
  runtime: go1.x
  lambdaHashingVersion: 20201221
  region: eu-west-2
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - s3:PutObject
          Resource: arn:aws:s3:::${self:custom.appName}-display/*
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource: arn:aws:s3:::${self:custom.appName}/*


resources:
  Resources:
    PhotoCreateEventsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.appName}-photo-create-events
        VisibilityTimeout: 60

    PhotoCreateEventsQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      DependsOn: PhotoCreateEventsQueue
      Properties:
        PolicyDocument:
          Statement:
            - Effect: Allow
              Sid: PutS3Events
              Action: SQS:SendMessage
              Resource: !GetAtt PhotoCreateEventsQueue.Arn
              Principal:
                Service: s3.amazonaws.com
        Queues:
          - !Ref PhotoCreateEventsQueue

    PhotoDeleteEventsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.appName}-photo-delete-events
        VisibilityTimeout: 60

    PhotoDeleteEventsQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      DependsOn: PhotoDeleteEventsQueue
      Properties:
        PolicyDocument:
          Statement:
            - Effect: Allow
              Sid: PutS3Events
              Action: SQS:SendMessage
              Resource: !GetAtt PhotoDeleteEventsQueue.Arn
              Principal:
                Service: s3.amazonaws.com
        Queues:
          - !Ref PhotoDeleteEventsQueue

    PhotoBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.appName}
        AccessControl: Private
        NotificationConfiguration:
          QueueConfigurations:
            - Event: s3:ObjectCreated:*
              Queue: !GetAtt PhotoCreateEventsQueue.Arn
            - Event: s3:ObjectRemoved:*
              Queue: !GetAtt PhotoDeleteEventsQueue.Arn

    PhotoBucketSyncPolicy:
      Type: AWS::IAM::ManagedPolicy
      DependsOn: PhotoDisplayBucket
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - S3:PutObject
                - S3:GetObject
              Resource: !Join [ "/", [ !GetAtt PhotoDisplayBucket.Arn, "*" ]]
            - Effect: Allow
              Action:
                - S3:ListBucket
              Resource: !GetAtt PhotoDisplayBucket.Arn

    PhotoDisplayBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.appName}-display
        AccessControl: Private

functions:
  resizeImage:
    name: ${self:custom.appName}-resize-photo
    handler: bin/resizePhoto
    events:
      - sqs:
          arn: !GetAtt PhotoCreateEventsQueue.Arn
    environment:
      DISPLAY_BUCKET: ${self:custom.appName}-display